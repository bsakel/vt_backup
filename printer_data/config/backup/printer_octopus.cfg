## Voron Trident 300mm Octopus TMC2209 USB config
##===================================================================

[include nozzle_scrub.cfg]
#[include menu_extras.cfg]
[include klicky-probe.cfg]
#[include euclid.cfg]
[include TEST_SPEED.cfg]
[include z_calibration.cfg]

[mcu]
serial: /dev/serial/by-id/usb-Klipper_stm32f429xx_200032000950314B33323220-if00

[mcu host]
serial: /tmp/klipper_host_mcu

#[mcu arduino]
#serial: /dev/serial/by-id/usb-Arduino__www.arduino.cc__0043_95730333737351C06192-if00

[printer]
kinematics: corexy
#max_velocity: 300
#max_accel: 3000
max_velocity: 500
max_accel: 10000
max_accel_to_decel: 5000
max_z_velocity: 15
max_z_accel: 50
square_corner_velocity: 5.0

[temperature_sensor Octopus_Pro_429]
sensor_type: temperature_mcu
min_temp: 0
max_temp: 100

[board_pins octopus_pro_429_tmc2209]
aliases:
    
  ## Motors
  motor0_step_pin=PF13,  motor0_dir_pin=PF12,  motor0_enable_pin=PF14,  motor0_uart_pin=PC4,
  motor1_step_pin=PG0,   motor1_dir_pin=PG1,   motor1_enable_pin=PF15,  motor1_uart_pin=PD11,
  motor2_step_pin=PF11,  motor2_dir_pin=PG3,   motor2_enable_pin=PG5,   motor2_uart_pin=PC6,   
  motor3_step_pin=PG4,   motor3_dir_pin=PC1,   motor3_enable_pin=PA0,   motor3_uart_pin=PC7,   
  motor4_step_pin=PF9,   motor4_dir_pin=PF10,  motor4_enable_pin=PG2,   motor4_uart_pin=PF2,   
  motor5_step_pin=PC13,  motor5_dir_pin=PF0,   motor5_enable_pin=PF1,   motor5_uart_pin=PE4,   
  motor6_step_pin=PE2,   motor6_dir_pin=PE3,   motor6_enable_pin=PD4,   motor6_uart_pin=PE1,
  motor7_step_pin=PE6,   motor7_dir_pin=PA14,  motor7_enable_pin=PE0,   motor7_uart_pin=PD3,

  ## Endstops
  endstop0_pin=PG6,  endstop1_pin=PG9,  endstop2_pin=PG10, endstop3_pin=PG11, 
  endstop4_pin=PG12, endstop5_pin=PG13, endstop6_pin=PG14, endstop7_pin=PG15,

  ## Heaters
  heated_bed_pin=PA1, he0_pin=PA2, he1_pin=PA3, he2_pin=PB10, he3_pin=PB11,    

  ## Thermistors
  TB_pin=PF3, T0_pin=PF4, T1_pin=PF5, T2_pin=PF6, T3_pin=PF7, 

  ## Fans
  fan0_pin=PA8, fan1_pin=PE5, fan2_pin=PD12, fan3_pin=PD13, fan4_pin=PD14, fan5_pin=PD15,
  
  ## Probe
  probe_pin=PC5,
 
  # Accel
  adxl345_cs_pin=PA15,

#####################################################################
#             Fluidd/Mainsail Required
#####################################################################

[virtual_sdcard]
path: ~/gcode_files

[display_status]

[pause_resume]

  

#####################################################################
#	X/Y Stepper Settings
#####################################################################

[stepper_x]
## B/X motor (connected to MOTOR_7)
step_pin: motor7_step_pin
dir_pin: motor7_dir_pin
enable_pin: !motor7_enable_pin
rotation_distance: 40			#20T Pulley, 2mm Belt Pitch
microsteps: 32
full_steps_per_rotation: 200	#200 for 1.8 degree, 400 for 0.9 degree

endstop_pin: endstop0_pin
position_min: 0
position_endstop: 302
position_max: 302
homing_speed: 50				#Max 100
homing_retract_dist: 5

[tmc2209 stepper_x]
#42sth48-2504ac/2209
uart_pin: motor7_uart_pin
run_current: 1.1
#hold_current: #0.7

interpolate: True
sense_resistor: 0.110
stealthchop_threshold: 0      # spreadCycle mode (recommended)
#stealthchop_threshold: 999999 # stealthChop mode

#driver_TBL: 1
#driver_TOFF: 3
#driver_HEND: 0
#driver_HSTRT: 0

[stepper_y]
## A/Y motor (connected to MOTOR_6)
step_pin: motor6_step_pin
dir_pin: motor6_dir_pin
enable_pin: !motor6_enable_pin
rotation_distance: 40			#20T Pulley, 2mm Belt Pitch
microsteps: 32
full_steps_per_rotation: 200	#200 for 1.8 degree, 400 for 0.9 degree

endstop_pin: endstop1_pin
position_min: 0
position_endstop: 305
position_max: 305
homing_speed: 50				#Max 100
homing_retract_dist: 5

[tmc2209 stepper_y]
#42sth48-2504ac/2209
uart_pin: motor6_uart_pin
run_current: 1.1
#hold_current: #0.7

interpolate: True
sense_resistor: 0.110
stealthchop_threshold: 0      # spreadCycle mode (recommended)
#stealthchop_threshold: 999999 # stealthChop mode

#driver_TBL: 1
#driver_TOFF: 3
#driver_HEND: 0
#driver_HSTRT: 0

#####################################################################
#	Z Stepper Settings
#####################################################################

[stepper_z]
## Z/rear motor (connected to MOTOR_2)
step_pin: motor2_step_pin
dir_pin: !motor2_dir_pin
enable_pin: !motor2_enable_pin
rotation_distance: 4
microsteps: 32
full_steps_per_rotation: 200	#200 for 1.8 degree, 400 for 0.9 degree

endstop_pin: endstop2_pin
##	Z-position of nozzle (in mm) to z-endstop trigger point relative to print surface (Z0)
##	(+) value = endstop above Z0, (-) value = endstop below
##	Increasing position_endstop brings nozzle closer to the bed
#position_endstop = -1.1 #working
#position_endstop = -1.050
#position_endstop = -1.000
position_endstop = 2.000 # black pin 
#position_endstop = -1.12 too far
position_max: 200
position_min: -5
homing_speed: 7 # Leadscrews are slower than 2.4, 10 is a recommended max.
homing_retract_dist: 3.0

[tmc2209 stepper_z]
uart_pin: motor2_uart_pin
interpolate: true
run_current: 0.7
hold_current: 0.5
sense_resistor: 0.110
stealthchop_threshold: 0      # spreadCycle mode (recommended)
#stealthchop_threshold: 999999 # stealthChop mode

[stepper_z1]
## Z1/right motor (connected to MOTOR_1)
step_pin: motor1_step_pin
dir_pin: !motor1_dir_pin
enable_pin: !motor1_enable_pin
rotation_distance: 4
microsteps: 32
full_steps_per_rotation: 200	#200 for 1.8 degree, 400 for 0.9 degree

[tmc2209 stepper_z1]
uart_pin: motor1_uart_pin
interpolate: true
run_current: 0.7
hold_current: 0.5
sense_resistor: 0.110
stealthchop_threshold: 0      # spreadCycle mode (recommended)
#stealthchop_threshold: 999999 # stealthChop mode

[stepper_z2]
## Z2/left motor (connected to MOTOR_0)
step_pin: motor0_step_pin
dir_pin: !motor0_dir_pin
enable_pin: !motor0_enable_pin
rotation_distance: 4
microsteps: 32
full_steps_per_rotation: 200	#200 for 1.8 degree, 400 for 0.9 degree

[tmc2209 stepper_z2]
uart_pin: motor0_uart_pin
interpolate: true
run_current: 0.7
hold_current: 0.5
sense_resistor: 0.110
stealthchop_threshold: 0      # spreadCycle mode (recommended)
#stealthchop_threshold: 999999 # stealthChop mode

#####################################################################
#	Extruder
#####################################################################

[extruder]
#### Extruder 1 (connected to MOTOR_5)
step_pin: motor5_step_pin
#dir_pin: motor5_dir_pin
enable_pin: !motor5_enable_pin
#rotation_distance: 22.6789511	#Bondtech 5mm Bore Drive Gears
#gear_ratio: 50:17				#BMG Gear Ratio
#microsteps: 32
#full_steps_per_rotation: 200	#200 for 1.8 degree, 400 for 0.9 degree

#galileo
dir_pin: !motor5_dir_pin
rotation_distance: 35.39167
gear_ratio: 7.5:1
microsteps: 32
full_steps_per_rotation: 200

nozzle_diameter: 0.400
filament_diameter: 1.75
heater_pin: he0_pin
sensor_type: ATC Semitec 104GT-2
sensor_pin: T0_pin
min_temp: 10
max_temp: 290
max_power: 1.0
min_extrude_temp: 10
#control = pid
#pid_kp = 24.256
#pid_ki = 2.215
#pid_kd = 66.401

##	Try to keep pressure_advance below 1.0
pressure_advance: 0.05
##	Default is 0.040, leave stock
pressure_advance_smooth_time: 0.040

max_extrude_only_distance: 300.0
max_extrude_cross_section: 5

[tmc2209 extruder]
uart_pin: motor5_uart_pin
interpolate: true
run_current: 0.5
#hold_current: 0.4
sense_resistor: 0.110
stealthchop_threshold: 0

#galileo
#run_current: 0.250
#hold_current: 0.200

##[extruder]
#### Extruder 1 (connected to MOTOR_5)
##step_pin: motor5_step_pin
##dir_pin: !motor5_dir_pin
##enable_pin: !motor5_enable_pin
##rotation_distance: 35.39167
##gear_ratio: 7.5:1
##microsteps: 32
##full_steps_per_rotation: 200
##
##nozzle_diameter: 0.400
##filament_diameter: 1.75
##heater_pin: he0_pin
##sensor_type: ATC Semitec 104GT-2
##sensor_pin: T0_pin
##min_temp: 10
##max_temp: 290
##max_power: 1.0
##min_extrude_temp: 10
##control = pid
##pid_kp = 24.256
##pid_ki = 2.215
##pid_kd = 66.401
##
####	Try to keep pressure_advance below 1.0
##pressure_advance: 0.05
####	Default is 0.040, leave stock
##pressure_advance_smooth_time: 0.040
##
##max_extrude_only_distance: 300.0
##max_extrude_cross_section: 5
##
##[tmc2209 extruder]
##uart_pin:  motor5_uart_pin
##interpolate: true
##run_current: 0.250
##hold_current: 0.200
##sense_resistor: 0.110
##stealthchop_threshold: 0
#####################################################################
#	Bed Heater
#####################################################################

[heater_bed]
heater_pin: heated_bed_pin
sensor_type: Generic 3950
sensor_pin: TB_pin
##	Adjust Max Power so your heater doesn't warp your bed
##	A good starting point is 0.4 W/cm^2
max_power: 0.5
min_temp: -150
max_temp: 120
control: pid
pid_kp: 58.437
pid_ki: 2.347
pid_kd: 363.769

#####################################################################
#	Chamber Temp
#####################################################################
[temperature_sensor chamber_klicky]
sensor_type: ATC Semitec 104NT-4-R025H42G #ATC Semitec 104GT-2
sensor_pin: T1_pin

#[temperature_sensor enclosure_temp]
#sensor_type: ATC Semitec 104GT-2
#sensor_pin: T2_pin
#min_temp: 0
#max_temp: 100
#gcode_id: C

[thermistor chamber_temp]
temperature1: 35 #25
resistance1: 10000
beta: 3950

[temperature_sensor enclosure_temp]
sensor_type: chamber_temp
sensor_pin: T2_pin
min_temp: 0
max_temp: 100
gcode_id: C

#####################################################################
#	Probe
#####################################################################

[probe]
pin: endstop3_pin #probe_pin

## Klicky
z_offset: 6.42
x_offset: 0 
y_offset: 19.75

##    Euclid Probe
#x_offset: 2.0                ; probe is offset 2.0mm from nozzle
#y_offset: 25.0               ; probe is +25mm from nozzle in Y direction
#z_offset: 9.5                ; trigger point is 9.5mm below nozzle. larger numbers move effective Z0 CLOSER to the nozzle
lift_speed: 10               ; probe lift speed


speed: 5                     ; probing speed of 5mm/second ideal is <10mm/sec  
samples: 3
samples_result: median
sample_retract_dist: 2.0
samples_tolerance: 0.01 #0.006
samples_tolerance_retries: 3


#####################################################################
#	Fan Control
#####################################################################

[heater_fan hotend_fan]
pin: fan1_pin
max_power: 1.0
kick_start_time: 0.5
heater: extruder
heater_temp: 50.0
fan_speed: 1.0

[fan]
pin: fan0_pin
kick_start_time: 0.5
off_below: 0.10

[temperature_fan pi_cpu]
sensor_type: temperature_host
pin: host:gpio12
control: watermark
max_delta: 5
target_temp: 50
min_temp: 0
max_temp : 90
shutdown_speed: 0    # Turn off for a shutdown/panic


[controller_fan electronics]
pin: fan2_pin
kick_start_time: 0.5
off_below: 0.10
fan_speed: 1.0
stepper: stepper_y,stepper_x,stepper_z,stepper_z1,stepper_z2
shutdown_speed: 1.0    # Leave on during shutdown/panic

#[fan_generic Fan3]
#pin: rpi:gpio18

#[fan_generic Fan4]
#pin: rpi:gpio26

#[fan_generic Fan5]
#pin: rpi:gpio23

#[heater_fan exhaust_fan]
## Exhaust Fan (connected to FAN2) (Optional)
#pin: PB2
#max_power: 1.0
#shutdown_speed: 0.0
#kick_start_time: 5.0
#heater: heater_bed
#heater_temp: 60
#fan_speed: 1.0

#####################################################################
#	LED Control (Optional)
#####################################################################

#[output_pin caselight]
# Chamber Lighting - Bed Connector (Optional)
#pin: PB4
#pwm: true
#shutdown_value: 0
#value:100
#cycle_time: 0.01
#scale: 100

#[neopixel arduino_neopixel]
#pin: arduino:PD6
#chain_count:1
#   Set the pixel order required by the LED hardware. Options are GRB,
#   RGB, GRBW, or RGBW. The default is GRB.
#color_order: GRB
#initial_RED: 0.0
#initial_GREEN: 0.0
#initial_BLUE: 0.0

#####################################################################
#	Homing and Gantry Adjustment Routines
#####################################################################

[idle_timeout]
timeout: 1800

[homing_override]
axes: z
set_position_z: 0
gcode:
	G90
	G0 Z5 F1000
	G28 X Y
	##	XY Location of the Z Endstop Switch
	##	Update X0 and Y0 to your values (such as X157, Y305) after going through
	##	Z Endstop Pin Location Definition step.
	G0 X172 Y302 F1500

	G28 Z
	G0 Z10 F1000

    #G0 X150 Y150 Z50 F3600
    GOTO_CENTER

#####################################################################
#	Displays
#####################################################################

##	For the mini12864 Display, the [display] and [neopixel] must be uncommented

##[display]
###	mini12864 LCD Display
##lcd_type: uc1701
##cs_pin: PC11
##a0_pin: PD2
##rst_pin: PC10
##encoder_pins: ^PC6,^PC7
##click_pin: ^!PA8
##contrast: 63
##spi_software_mosi_pin: PA7
##spi_software_miso_pin: PA6
##spi_software_sclk_pin: PA5
##
##[neopixel fysetc_mini12864]
####	To control Neopixel RGB in mini12864 display
#### Remember with these ones, you'll need to remove the connector header on the LCD for EXT1 + 2
#### (it slides off) and reverse it for it to work on your SKR (1.3 and 1.4) board
##pin: PC12
##chain_count: 3
##initial_RED: 0
##initial_GREEN: 0
##initial_BLUE: 0
##color_order: RGB
##
###	Set RGB values on boot up for each Neopixel.
###	Index 1 = display, Index 2 and 3 = Knob
##[delayed_gcode setdisplayneopixel]
##initial_duration: 1
##gcode:
##	SET_LED LED=fysetc_mini12864 RED=1 GREEN=1 BLUE=1 INDEX=1	# Backlit Screen colour
##	#SET_LED LED=fysetc_mini12864 RED=1 GREEN=1 BLUE=1 INDEX=2 TRANSMIT=0	# Top left Knob colour
##	#SET_LED LED=fysetc_mini12864 RED=1 GREEN=1 BLUE=1 INDEX=3		# Bottom right knob colour


#####################################################################
#	Macros
#####################################################################
[z_tilt]
#	Use Z_TILT_ADJUST to level the bed left to right.
#	z_positions: Location of toolhead

#z_positions:
#  150, 338	
#  346, 20  
#  -46, 20

z_positions:
  150, 348   
  350, 18  
  -50, 18
     
points:
  150, 245	
  270, 5  
  30, 5

speed: 300
horizontal_move_z: 15
retries: 5
retry_tolerance: 0.0075

[bed_mesh]
speed: 300
horizontal_move_z: 15
mesh_min: 40, 40
mesh_max: 260,260
fade_start: 0.6
fade_end: 10.0
probe_count: 5,5
#probe_count: 9,9
algorithm: bicubic
relative_reference_index: 12


[gcode_macro CANCEL_PRINT]
rename_existing: BASE_CANCEL_PRINT
gcode:
  TURN_OFF_HEATERS
  CLEAR_PAUSE
  SDCARD_RESET_FILE
  BASE_CANCEL_PRINT

[gcode_macro PAUSE]
rename_existing: BASE_PAUSE
# change this if you need more or less extrusion
variable_extrude: 1.0
gcode:
  ##### read E from pause macro #####
  {% set E = printer["gcode_macro PAUSE"].extrude|float %}
  ##### set park positon for x and y #####
  # default is your max posion from your printer.cfg
  {% set x_park = printer.toolhead.axis_maximum.x|float - 5.0 %}
  {% set y_park = printer.toolhead.axis_maximum.y|float - 5.0 %}
  ##### calculate save lift position #####
  {% set max_z = printer.toolhead.axis_maximum.z|float %}
  {% set act_z = printer.toolhead.position.z|float %}
  {% if act_z < (max_z - 2.0) %}
      {% set z_safe = 2.0 %}
  {% else %}
      {% set z_safe = max_z - act_z %}
  {% endif %}
  ##### end of definitions #####
  SAVE_GCODE_STATE NAME=PAUSE_state
  BASE_PAUSE
  G91
  G1 E-{E} F2100
  G1 Z{z_safe} F900
  G90
  G1 X{x_park} Y{y_park} F6000

[gcode_macro RESUME]
rename_existing: BASE_RESUME
gcode:
  ##### read E from pause macro #####
  {% set E = printer["gcode_macro PAUSE"].extrude|float %}
  ##### end of definitions #####
  G91
  G1 E{E} F2100
  RESTORE_GCODE_STATE NAME=PAUSE_state
  BASE_RESUME

[gcode_macro M600]
gcode:
    {% set X = params.X|default(50)|float %}
    {% set Y = params.Y|default(0)|float %}
    {% set Z = params.Z|default(10)|float %}
    SAVE_GCODE_STATE NAME=M600_state
    PAUSE
    G91
    G1 E-.8 F2700
    G1 Z{Z}
    G90
    G1 X{X} Y{Y} F3000
    G91
    G1 E-50 F1000
    RESTORE_GCODE_STATE NAME=M600_state

[gcode_macro PART_COOLING_FAN_ON]
gcode:
    M106 S255

[gcode_macro PART_COOLING_FAN_OFF]
gcode:
    M106 S0

[gcode_macro PRINT_START]
#	Use PRINT_START for the slicer starting script - PLEASE CUSTOMISE THE SCRIPT
gcode:
    # Parameters
    {% set bedtemp = params.BED|default(100)|int %}
    {% set hotendtemp = params.HOTEND|default(240)|int %}
    {% set bedmeshcalibrate = params.BEDMESHCALIBRATE|default(1)|int %}
    {% set nozzlescrub = params.NOZZLESCRUB|default(0)|int %}
    {% set purgeline = params.PURGELINE|default(1)|int %}

    {% set chambertemp = params.CHAMBER|default(35)|int %}
    {% set chambertempwait = params.CHAMBERTEMPWAIT|default(0)|int %}

    M140 S{bedtemp}                                       ; set bed temp

	M117 Homing...				   
	G28 Y0 X0 Z0

    M117 Heating bed...				   
    M190 S{bedtemp}                                       ; set & wait for bed temp

    {% if chambertempwait == 1 %}
		M117 Waiting for chamber...				   
        TEMPERATURE_WAIT SENSOR=chamber MINIMUM={chambertemp}   ; wait for chamber temp
	{% endif %}

    M117 Pre-heating nozzle...				   
    M109 S150                                             ; set & wait for preheat hotend temp

    {% if nozzlescrub == 1 %}
        M117 Cleaning Nozzle...
        clean_nozzle
    {% endif %}

    M117 Adjusting Z Tilt...
    Z_TILT_ADJUST

    {% if bedmeshcalibrate == 1 %}
		M117 Calibrating Bed Mesh...
        BED_MESH_CALIBRATE
	{% endif %}

	M117 Calibrate Z...
    CALIBRATE_Z

    M117 Heating nozzle...				   
    M109 S{hotendtemp}                    ; set & wait for hotend temp

    {% if purgeline == 1 %}
        M117 Purge Line
    	G92 E0;
    	G90
    	G0 X110 Y5 F6000
    	G0 Z0.4
    	G91
    	G1 X90 E30 F1200;
    	G1 Y1
    	G1 X-90 E30 F1200;
    	G92 E0;
    	G90

    	G1 Z15.0 F600 ;move the platform down 15mm
    	G1 X125 Y125 F3000
    	G92 E0 ;zero the extruded length again
    	G1 F9000
    {% endif %}
	

[gcode_macro PRINT_END]
#	Use PRINT_END for the slicer ending script
gcode:
	#	Get Boundaries
	{% set max_x = printer.configfile.config["stepper_x"]["position_max"]|float %}
	{% set max_y = printer.configfile.config["stepper_y"]["position_max"]|float %}
	{% set max_z = printer.configfile.config["stepper_z"]["position_max"]|float %}

	#	Check end position to determine safe directions to move
	{% if printer.toolhead.position.x < (max_x - 20) %}
		{% set x_safe = 20.0 %}
	{% else %}
		{% set x_safe = -20.0 %}
	{% endif %}

	{% if printer.toolhead.position.y < (max_y - 20) %}
		{% set y_safe = 20.0 %}
	{% else %}
		{% set y_safe = -20.0 %}
	{% endif %}

	{% if printer.toolhead.position.z < (max_z - 2) %}
		{% set z_safe = 2.0 %}
	{% else %}
		{% set z_safe = max_z - printer.toolhead.position.z %}
	{% endif %}

	#  Commence PRINT_END
	M400							 ; wait for buffer to clear
	G92 E0							 ; zero the extruder
	G1 E-15.0 F3600					 ; retract
	G91								 ; relative positioning
	G0 Z{z_safe} F3600				 ; move nozzle up
	G0 X{x_safe} Y{y_safe} F20000	 ; move nozzle to remove stringing

	M104 S0							 ; turn off hotend
	M140 S0							 ; turn off bed
	M106 S0							 ; turn off fan
	G90								 ; absolute positioning
	G0 X{max_x / 2} Y{max_y} F3600	 ; park nozzle at rear
	M117 Finished!

[gcode_macro MOTORS_OFF]
gcode:
  SET_STEPPER_ENABLE STEPPER=stepper_x ENABLE=0
  SET_STEPPER_ENABLE STEPPER=stepper_y ENABLE=0
  SET_STEPPER_ENABLE STEPPER=stepper_z ENABLE=0
  SET_STEPPER_ENABLE STEPPER=stepper_z1 ENABLE=0
  SET_STEPPER_ENABLE STEPPER=stepper_z2 ENABLE=0
  SET_STEPPER_ENABLE STEPPER=extruder ENABLE=0

[gcode_macro PREP_PRINTER]
gcode:
	G28 Y0 X0 Z0
	Z_TILT_ADJUST
	#BED_MESH_CALIBRATE
	G28 Y0 X0 Z0

[gcode_macro GOTO_CENTER]
gcode:
  G90								 ; absolute positioning
  G0 X150 Y150 Z50 F3600

[gcode_macro M105]
rename_existing:            M105.1
gcode:  

   M105.1

   #if the extruder is off
   {% if printer.extruder.target == 0 %}

      #Set the LED to red if the extruder is off but is still hot, otherwise 
      # set the color to white
      {% if printer.extruder.temperature > 60.0 %}
         SET_LED LED=fysetc_mini12864 RED=1 GREEN=0 BLUE=0 INDEX=2 TRANSMIT=0 # Top left Knob colour
    	 SET_LED LED=fysetc_mini12864 RED=1 GREEN=0 BLUE=0 INDEX=3	# Bottom right knob colour
      {% else %}
         SET_LED LED=fysetc_mini12864 RED=1 GREEN=1 BLUE=1 INDEX=2 TRANSMIT=0 # Top left Knob colour
         SET_LED LED=fysetc_mini12864 RED=1 GREEN=1 BLUE=1 INDEX=3	# Bottom right knob colour
      {% endif %}     

   {% else %}

         #if the extruder temp is at target temperature 
         {% if printer.extruder.temperature >= printer.extruder.target - 4.0 %}
            SET_LED LED=fysetc_mini12864 RED=1 GREEN=0 BLUE=0 INDEX=2 TRANSMIT=0 # Top left Knob colour
        	SET_LED LED=fysetc_mini12864 RED=1 GREEN=0 BLUE=0 INDEX=3	# Bottom right knob colour
         #if the extruder is still heating
         {% else %}
            {% set scaler = printer.extruder.temperature|float / printer.extruder.target|float %}
            SET_LED LED=fysetc_mini12864 RED={ scaler|float * 1 } GREEN=0 BLUE=0 INDEX=2 TRANSMIT=0 # Top left Knob colour
        	SET_LED LED=fysetc_mini12864 RED={ scaler|float * 1 } GREEN=0 BLUE=0 INDEX=3 # Bottom right knob colour
         {% endif %}  

   {% endif %}

#*# <---------------------- SAVE_CONFIG ---------------------->
#*# DO NOT EDIT THIS BLOCK OR BELOW. The contents are auto-generated.
#*#
#*# [extruder]
#*# control = pid
#*# pid_kp = 21.026
#*# pid_ki = 1.001
#*# pid_kd = 110.387
